{"version":3,"sources":["components/Navbar.js","components/Description.js","components/Form.js","components/Forms.js","components/PortfolioContents.js","components/Portfolio.js","index.js"],"names":["Navbar","className","to","Description","href","target","rel","withRouter","props","title","useState","username","setUsername","submitted","setSubmitted","useEffect","history","push","contestSite","onSubmit","event","preventDefault","setInformation","type","value","onChange","Forms","usernames","atcoder","codeforces","topcoder","yukicoder","PortfolioContents","valueUnit","subValue","subValueUnit","getOrdinal","num","Portfolio","loading","setLoading","data","setData","focusedContestSite","fetch","then","response","json","responseJson","prev","acCount","acCountRank","ratedPointSum","ratedPointSumRank","catch","err","console","error","firstAcCount","problem","first_user_id","undefined","firstAcRank","user","fastestCodeCount","fastest_user_id","fastestCodeRank","shortestCodeCount","shortest_user_id","shortestCodeRank","userData","filter","item","user_id","longestStreakRank","forEach","streak","longestStreak","rating","ratingRank","participatedRatedContests","participatedContests","App","setFocusedContestSite","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e056386.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"../stylesheets/Navbar.css\"\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\">\n            <Link className=\"navbar-title\" to=\"/\">\n                Competitive Programming Portfolio\n            </Link>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from \"react\"\nimport \"../stylesheets/Description.css\"\n\nconst Description = () => {\n    return (\n        <>\n            <div className=\"main-contents\">\n                <div className=\"main-contents-title\">\n                    Competitive Programming Portfolio とは？\n                </div>\n                <hr />\n                <div className=\"description\">\n                    AtCoder, Codeforces, TopCoder,\n                    yukicoderのユーザ名から情報を取得し、統計情報を取得するサイトです。\n                    <br />\n                    <a\n                        href=\"https://twitter.com/ageprocpp\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        @ageprocpp\n                    </a>\n                    が運営しています。\n                </div>\n            </div>\n            <div className=\"main-contents\">\n                <div className=\"main-contents-title\">取得できるもの</div>\n                <hr />\n                <div className=\"description\">\n                    正解数はもちろん、提出したコードの総長, 得点の合計,\n                    streakなどを取得できます。\n                    <br />\n                    取得には、AtCoder Problems API, Codeforces API, TopCoder\n                    API, yukicoder APIをそれぞれ利用しています。\n                    <br />\n                    追加してほしいものがあれば、連絡してください。\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Description\n","import React, { useState, useEffect } from \"react\"\nimport \"../stylesheets/Form.css\"\nimport { withRouter } from \"react-router-dom\"\nconst Form = props => {\n    const [username, setUsername] = useState(props.username)\n    const [submitted, setSubmitted] = useState(false)\n\n    const handleChange = event => {\n        setUsername(event.target.value)\n    }\n    const handleSubmit = event => {\n        event.preventDefault()\n        props.setInformation(props.contestSite, username)\n        setSubmitted(true)\n    }\n\n    useEffect(() => {\n        if (submitted) {\n            props.history.push(\"/portfolio\")\n            setSubmitted(false)\n        }\n    }, [submitted, props.history])\n\n    let title\n    if (props.contestSite === \"atcoder\") title = \"AtCoder\"\n    if (props.contestSite === \"codeforces\") title = \"Codeforces\"\n    if (props.contestSite === \"topcoder\") title = \"TopCoder\"\n    if (props.contestSite === \"yukicoder\") title = \"yukicoder\"\n\n    return (\n        <li className=\"form\">\n            <div className=\"form-contents\">\n                <div className=\"form-title\">{title}</div>\n                <form onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        className=\"username\"\n                        value={username}\n                        onChange={handleChange}\n                    />\n                </form>\n            </div>\n        </li>\n    )\n}\n\nexport default withRouter(Form)\n","import React from \"react\"\nimport \"../stylesheets/Forms.css\"\nimport Form from \"./Form\"\nconst Forms = props => {\n    return (\n        <>\n            <hr />\n            <ul className=\"forms\">\n                <Form\n                    contestSite=\"atcoder\"\n                    setInformation={props.setInformation}\n                    username={props.usernames.atcoder}\n                />\n                <Form\n                    contestSite=\"codeforces\"\n                    setInformation={props.setInformation}\n                    username={props.usernames.codeforces}\n                />\n                <Form\n                    contestSite=\"topcoder\"\n                    setInformation={props.setInformation}\n                    username={props.usernames.topcoder}\n                />\n                <Form\n                    contestSite=\"yukicoder\"\n                    setInformation={props.setInformation}\n                    username={props.usernames.yukicoder}\n                />\n            </ul>\n        </>\n    )\n}\n\nexport default Forms\n","import React from \"react\"\nimport \"../stylesheets/PortfolioContents.css\"\n\nconst PortfolioContents = props => {\n    return (\n        <div className=\"portfolio-content\">\n            <div className=\"portfolio-content-title\">{props.title}</div>\n            <div className=\"portfolio-content-value\">\n                {props.value}\n                <span className=\"portfolio-content-value-unit\">\n                    {props.valueUnit}\n                </span>\n            </div>\n            <div className=\"portfolio-content-subValue\">\n                {props.subValue}\n                {props.subValueUnit}\n            </div>\n        </div>\n    )\n}\n\nexport default PortfolioContents\n","import React, { useEffect, useState } from \"react\"\nimport \"../stylesheets/Portfolio.css\"\nimport PortfolioContents from \"./PortfolioContents\"\n\nfunction getOrdinal(num) {\n    if (num % 10 === 1) return \"st\"\n    else if (num % 10 === 2) return \"nd\"\n    return \"th\"\n}\n\nconst Portfolio = props => {\n    const [loading, setLoading] = useState(0)\n    const [data, setData] = useState({})\n    useEffect(() => {\n        if (props.focusedContestSite === \"atcoder\") {\n            setLoading(4)\n            fetch(\n                \"https://kenkoooo.com/atcoder/atcoder-api/v2/user_info?user=\" +\n                    props.username\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    setData(prev => {\n                        return {\n                            ...prev,\n                            acCount: responseJson[\"accepted_count\"],\n                            acCountRank:\n                                responseJson[\"accepted_count_rank\"] + 1,\n                            ratedPointSum: responseJson[\"rated_point_sum\"],\n                            ratedPointSumRank:\n                                responseJson[\"rated_point_sum_rank\"] + 1,\n                        }\n                    })\n                    setLoading(prev => {\n                        return prev - 1\n                    })\n                })\n                .catch(err => console.error(err))\n\n            fetch(\"https://kenkoooo.com/atcoder/resources/merged-problems.json\")\n                .then(response => response.json())\n                .then(responseJson => {\n                    let firstAcCount = {\n                        [props.username]: 0,\n                    }\n                    for (let problem of responseJson) {\n                        if (problem.first_user_id === null) continue\n                        if (firstAcCount[problem.first_user_id] === undefined)\n                            firstAcCount[problem.first_user_id] = 1\n                        else firstAcCount[problem.first_user_id]++\n                    }\n                    let firstAcRank = 1\n                    for (let user in firstAcCount) {\n                        if (firstAcCount[user] > firstAcCount[props.username])\n                            firstAcRank++\n                    }\n                    setData(prev => {\n                        return {\n                            ...prev,\n                            firstAcCount: firstAcCount[props.username],\n                            firstAcRank: firstAcRank,\n                        }\n                    })\n\n                    let fastestCodeCount = {\n                        [props.username]: 0,\n                    }\n                    for (let problem of responseJson) {\n                        if (problem.fastest_user_id === null) continue\n                        if (\n                            fastestCodeCount[problem.fastest_user_id] ===\n                            undefined\n                        )\n                            fastestCodeCount[problem.fastest_user_id] = 1\n                        else fastestCodeCount[problem.fastest_user_id]++\n                    }\n                    let fastestCodeRank = 1\n                    for (let user in fastestCodeCount) {\n                        if (\n                            fastestCodeCount[user] >\n                            fastestCodeCount[props.username]\n                        )\n                            fastestCodeRank++\n                    }\n                    setData(prev => {\n                        return {\n                            ...prev,\n                            fastestCodeCount: fastestCodeCount[props.username],\n                            fastestCodeRank: fastestCodeRank,\n                        }\n                    })\n\n                    let shortestCodeCount = {\n                        [props.username]: 0,\n                    }\n                    for (let problem of responseJson) {\n                        if (problem.shortest_user_id === null) continue\n                        if (\n                            shortestCodeCount[problem.shortest_user_id] ===\n                            undefined\n                        )\n                            shortestCodeCount[problem.shortest_user_id] = 1\n                        else shortestCodeCount[problem.shortest_user_id]++\n                    }\n                    let shortestCodeRank = 1\n                    for (let user in shortestCodeCount) {\n                        if (\n                            shortestCodeCount[user] >\n                            shortestCodeCount[props.username]\n                        )\n                            shortestCodeRank++\n                    }\n\n                    setData(prev => {\n                        return {\n                            ...prev,\n                            shortestCodeCount:\n                                shortestCodeCount[props.username],\n                            shortestCodeRank: shortestCodeRank,\n                        }\n                    })\n                    setLoading(prev => {\n                        return prev - 1\n                    })\n                })\n                .catch(err => console.error(err))\n\n            fetch(\"https://kenkoooo.com/atcoder/resources/streaks.json\")\n                .then(response => response.json())\n                .then(responseJson => {\n                    let userData = responseJson.filter(item => {\n                        return item.user_id === props.username\n                    })\n                    if (userData[0] === undefined) {\n                        setLoading(prev => {\n                            return prev - 1\n                        })\n                        return\n                    }\n                    let longestStreakRank = 1\n                    responseJson.forEach(user => {\n                        if (user.streak > userData[0].streak)\n                            longestStreakRank++\n                    })\n                    setData(prev => {\n                        return {\n                            ...prev,\n                            longestStreak: userData[0].streak,\n                            longestStreakRank: longestStreakRank,\n                        }\n                    })\n                    setLoading(prev => {\n                        return prev - 1\n                    })\n                })\n            fetch(\n                `https://cpportfolio-backend.herokuapp.com/atcoder/?username=${props.username}`\n            )\n                .then(response => response.json())\n                .then(responseJson => {\n                    setData(prev => {\n                        return {\n                            ...prev,\n                            rating: responseJson.rating,\n                            ratingRank: responseJson.ratingRank,\n                            participatedRatedContests:\n                                responseJson.participatedRatedContests,\n                            participatedContests:\n                                responseJson.participatedContests,\n                        }\n                    })\n                    setLoading(prev => {\n                        return prev - 1\n                    })\n                })\n                .catch(err => console.error(err))\n        }\n    }, [props.focusedContestSite, props.username])\n    if (props.focusedContestSite === \"\" || props.username === \"\") return <></>\n    if (loading) {\n        return (\n            <>\n                <hr />\n                <div className=\"loading\">Loading...</div>\n            </>\n        )\n    }\n    return (\n        <>\n            <hr />\n            <div className=\"portfolio-main\">\n                <div className=\"portfolio-contents\">\n                    <PortfolioContents\n                        title=\"Rating\"\n                        value={data.rating}\n                        valueUnit=\"\"\n                        subValue={data.ratingRank}\n                        subValueUnit=\"\"\n                    />\n                    <PortfolioContents\n                        title=\"Participated Contests\"\n                        value={data.participatedContests}\n                        valueUnit=\"\"\n                        subValue={`Rated:${data.participatedRatedContests}`}\n                    />\n                    <PortfolioContents\n                        title=\"AC Count\"\n                        value={data.acCount}\n                        valueUnit=\"\"\n                        subValue={data.acCountRank}\n                        subValueUnit={getOrdinal(data.acCountRank)}\n                    />\n                    <PortfolioContents\n                        title=\"Rated Point Sum\"\n                        value={data.ratedPointSum}\n                        valueUnit=\"pt\"\n                        subValue={data.ratedPointSumRank}\n                        subValueUnit={getOrdinal(data.ratedPointSumRank)}\n                    />\n                    <PortfolioContents\n                        title=\"First AC\"\n                        value={data.firstAcCount}\n                        valueUnit=\"\"\n                        subValue={data.firstAcRank}\n                        subValueUnit={getOrdinal(data.firstAcRank)}\n                    />\n                    <PortfolioContents\n                        title=\"Fastest Code\"\n                        value={data.fastestCodeCount}\n                        valueUnit=\"\"\n                        subValue={data.fastestCodeRank}\n                        subValueUnit={getOrdinal(data.fastestCodeRank)}\n                    />\n                    <PortfolioContents\n                        title=\"Shortest Code\"\n                        value={data.shortestCodeCount}\n                        valueUnit=\"\"\n                        subValue={data.shortestCodeRank}\n                        subValueUnit={getOrdinal(data.shortestCodeRank)}\n                    />\n                    <PortfolioContents\n                        title=\"Longest Streak\"\n                        value={data.longestStreak}\n                        valueUnit=\"days\"\n                        subValue={data.longestStreakRank}\n                        subValueUnit={getOrdinal(data.longestStreakRank)}\n                    />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Portfolio\n","import React, { useState } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport \"./stylesheets/index.css\"\nimport Navbar from \"./components/Navbar\"\nimport Description from \"./components/Description\"\nimport Forms from \"./components/Forms\"\nimport Portfolio from \"./components/Portfolio\"\n\nconst App = () => {\n    const [username, setUsername] = useState({\n        atcoder: \"\",\n        codeforces: \"\",\n        topcoder: \"\",\n        yukicoder: \"\",\n    })\n    const [focusedContestSite, setFocusedContestSite] = useState(\"\")\n\n    const setInformation = (contestSite, username) => {\n        setFocusedContestSite(contestSite)\n        setUsername(prev => {\n            return { ...prev, [contestSite]: username }\n        })\n    }\n\n    return (\n        <div className=\"app\">\n            <Router>\n                <div className=\"main\">\n                    <Navbar />\n                    <Route exact path=\"/\" component={Description} />\n                    <Forms\n                        setInformation={setInformation}\n                        usernames={username}\n                    />\n                    <Route\n                        path=\"/portfolio\"\n                        render={() => (\n                            <Portfolio\n                                focusedContestSite={focusedContestSite}\n                                username={username[focusedContestSite]}\n                            />\n                        )}\n                    />\n                </div>\n            </Router>\n        </div>\n    )\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}